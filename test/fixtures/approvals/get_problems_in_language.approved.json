{
  "problems": [
    {
      "id": "php/trinary",
      "track_id": "php",
      "slug": "trinary",
      "files": {
        "trinary_test.php": "<?php\n\nrequire realpath(__DIR__ . '/trinary.php');\n\nclass TrinaryTest extends PHPUnit_Framework_TestCase {\n\n  /** @test */\n  public function test_1_is_decimal_1() {\n    $trinary = new Trinary('1');\n    $this->assertEquals(1, $trinary->toDecimal());\n  }\n\n  public function test_2_is_decimal_2() {\n    $this->markTestSkipped();\n    $trinary = new Trinary('2');\n    $this->assertEquals(2, $trinary->toDecimal());\n  }\n\n  public function test_10_is_decimal_3() {\n    $this->markTestSkipped();\n    $trinary = new Trinary('10');\n    $this->assertEquals(3, $trinary->toDecimal());\n  }\n\n  public function test_11_is_decimal_4() {\n    $this->markTestSkipped();\n    $trinary = new Trinary('11');\n    $this->assertEquals(4, $trinary->toDecimal());\n  }\n\n  public function test_100_is_decimal_9() {\n    $this->markTestSkipped();\n    $trinary = new Trinary('100');\n    $this->assertEquals(9, $trinary->toDecimal());\n  }\n\n  public function test_112_is_decimal_14() {\n    $this->markTestSkipped();\n    $trinary = new Trinary('112');\n    $this->assertEquals(14, $trinary->toDecimal());\n  }\n\n  public function test_222_is_decimal_26() {\n    $this->markTestSkipped();\n    $trinary = new Trinary('222');\n    $this->assertEquals(26, $trinary->toDecimal());\n  }\n\n  public function test_1122000120_is_decimal_32091() {\n    $this->markTestSkipped();\n    $trinary = new Trinary('1122000120');\n    $this->assertEquals(32091, $trinary->toDecimal());\n  }\n\n  public function test_invalid_trinary_is_decimal_0() {\n    $this->markTestSkipped();\n    $trinary = new Trinary('carrot');\n    $this->assertEquals(0, $trinary->toDecimal());\n  }\n\n}\n",
        "README.md": "# Trinary\n\nWrite a program that will convert a trinary number, represented as a string (e.g. '102012'), to its decimal equivalent using first principles.\n\nThe program should consider strings specifying an invalid trinary as the value 0.\n\nTrinary numbers contain three symbols: 0, 1, and 2.\n\nThe last place in a trinary number is the 1's place. The second to last is the 3's place, the third to last is the 9's place, etc.\n\n```bash\n# \"102012\"\n    1       0       2       0       1       2    # the number\n1*3^5 + 0*3^4 + 2*3^3 + 0*3^2 + 1*3^1 + 2*3^0    # the value\n  243 +     0 +    54 +     0 +     3 +     2 =  302\n```\n\n\n## Source\n\nAll of Computer Science [view source](http://www.wolframalpha.com/input/?i=binary&a=*C.binary-_*MathWorld-)\n"
      },
      "fresh": true
    },
    {
      "id": "php/wordy",
      "track_id": "php",
      "slug": "wordy",
      "files": {
        "wordy_test.php": "<?php\n\nrequire realpath(__DIR__ . '/wordy.php');\n\nclass WordProblemTest extends PHPUnit_Framework_TestCase {\n\n  /** @test */\n  public function test_add_1() {\n    $problem = new WordProblem('What is 1 plus 1?');\n    $this->assertEquals(2, $problem->answer());\n  }\n\n  public function test_add_2() {\n    $this->markTestSkipped();\n    $problem = new WordProblem('What is 53 plus 2?');\n    $this->assertEquals(55, $problem->answer());\n  }\n\n  public function test_add_negative_numbers() {\n    $this->markTestSkipped();\n    $problem = new WordProblem('What is -1 plus -10?');\n    $this->assertEquals(-11, $problem->answer());\n  }\n\n  public function test_add_more_digits() {\n    $this->markTestSkipped();\n    $problem = new WordProblem('What is 123 plus 45678?');\n    $this->assertEquals(45801, $problem->answer());\n  }\n\n  public function test_subtract() {\n    $this->markTestSkipped();\n    $problem = new WordProblem('What is 4 minus -12?');\n    $this->assertEquals(16, $problem->answer());\n  }\n\n  public function test_multiply() {\n    $this->markTestSkipped();\n    $problem = new WordProblem('What is -3 multiplied by 25?');\n    $this->assertEquals(-75, $problem->answer());\n  }\n\n  public function test_divide() {\n    $this->markTestSkipped();\n    $problem = new WordProblem('What is 33 divided by -3?');\n    $this->assertEquals(-11, $problem->answer());\n  }\n\n  public function test_add_twice() {\n    $this->markTestSkipped();\n    $problem = new WordProblem('What is 1 plus 1 plus 1?');\n    $this->assertEquals(3, $problem->answer());\n  }\n\n  public function test_add_then_subtract() {\n    $this->markTestSkipped();\n    $problem = new WordProblem('What is 1 plus 5 minus -2?');\n    $this->assertEquals(8, $problem->answer());\n  }\n\n  public function test_subtract_twice() {\n    $this->markTestSkipped();\n    $problem = new WordProblem('What is 20 minus 4 minus 13?');\n    $this->assertEquals(3, $problem->answer());\n  }\n\n  public function test_subtract_then_add() {\n    $this->markTestSkipped();\n    $problem = new WordProblem('What is 17 minus 6 plus 3?');\n    $this->assertEquals(14, $problem->answer());\n  }\n\n  public function test_multiply_twice() {\n    $this->markTestSkipped();\n    $problem = new WordProblem('What is 2 multiplied by -2 multiplied by 3?');\n    $this->assertEquals(-12, $problem->answer());\n  }\n\n  public function test_add_then_multiply() {\n    $this->markTestSkipped();\n    $problem = new WordProblem('What is -3 plus 7 multiplied by -2?');\n    $this->assertEquals(-8, $problem->answer());\n  }\n\n  public function test_divide_twice() {\n    $this->markTestSkipped();\n    $problem = new WordProblem('What is -12 divided by 2 divided by -3?');\n    $this->assertEquals(2, $problem->answer());\n  }\n\n  public function test_too_advanced() {\n    $this->markTestSkipped();\n    $this->setExpectedException('ArgumentError');\n\n    $problem = new WordProblem('What is 53 cubed?');\n    $problem->answer();\n  }\n\n  public function test_irrelevant() {\n    $this->markTestSkipped();\n    $this->setExpectedException('ArgumentError');\n\n    $problem = new WordProblem('Who is the president of the United States?');\n    $problem->answer();\n  }\n\n}\n",
        "README.md": "# Wordy\n\nWrite a program that takes a word problem and returns the answer as an integer.\n\n## Step 1\n\nE.g.\n\n> What is 5 plus 13?\n\nThe program should handle large numbers and negative numbers.\n\nUse the tests to drive your solution by deleting the `skip` in one test at a time.\n\n## Step 2\n\nE.g.\n\n> What is 5 plus 13?\n\n> What is 7 minus 5?\n\n> What is 6 multiplied by 4?\n\n> What is 25 divided by 5?\n\n## Step 3\n\nE.g.\n\n> What is 5 plus 13 plus 6?\n\n> What is 7 minus 5 minus 1?\n\n> What is 9 minus 3 plus 5?\n\n> What is 3 plus 5 minus 8?\n\n## Step 4\n\nE.g.\n\n> What is 5 plus 13?\n\n> What is 7 minus 5?\n\n> What is 6 times 4?\n\n> What is 25 divided by 5?\n\n> What is 78 plus 5 minus 3?\n\n> What is 18 times 3 plus 16?\n\n> What is 4 times 3 divided by 6?\n\n> What is 4 plus 3 times 2?\n\n## Extensions\n\nImplement questions of the type:\n\n> What is 2 raised to the 5th power?\n\nRemember to write failing tests for this code.\n\n\n## Source\n\nInspired by one of the generated questions in the Extreme Startup game. [view source](https://github.com/rchatley/extreme_startup)\n"
      },
      "fresh": true
    }
  ]
}
